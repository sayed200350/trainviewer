# BahnBlitz - Docker Compose Configuration
# For local development and testing

version: '3.8'

services:
  # ================================
  # Backend API Service
  # ================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: bahnblitz-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/bahnblitz-beta
      - TESTFLIGHT_URL=https://testflight.apple.com/join/YOUR_APP_ID
    env_file:
      - ./backend/.env
    depends_on:
      - mongodb
    networks:
      - bahnblitz-network
    volumes:
      - ./backend/uploads:/app/uploads
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ================================
  # Frontend Website Service
  # ================================
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    container_name: bahnblitz-website
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - bahnblitz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ================================
  # MongoDB Database
  # ================================
  mongodb:
    image: mongo:6.0
    container_name: bahnblitz-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=bahnblitz-beta
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - bahnblitz-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ================================
  # MongoDB Express (Web UI for DB)
  # ================================
  mongo-express:
    image: mongo-express:latest
    container_name: bahnblitz-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - bahnblitz-network

# ================================
# Networks
# ================================
networks:
  bahnblitz-network:
    driver: bridge

# ================================
# Volumes
# ================================
volumes:
  mongodb_data:
    driver: local

# ================================
# Development Overrides
# ================================
# Uncomment the following section for development
#
# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile.dev
#     volumes:
#       - ./backend:/app
#       - /app/node_modules
#     environment:
#       - NODE_ENV=development
#
#   website:
#     build:
#       context: ./website
#       dockerfile: Dockerfile.dev
#     volumes:
#       - ./website:/usr/share/nginx/html
